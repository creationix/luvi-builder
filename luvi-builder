#!/usr/bin/env sh
# This file is part of luvi-builder. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/luvi-builder/master/COPYRIGHT. No part of luvi-builder, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2015 The developers of luvi-builder. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/luvi-builder/master/COPYRIGHT.


_program()
{
	core_usesIn luvi
    main()
    {
		luvi_main
    }
}

_program_name='luvi'
_program_version='unversioned'
_program_package_or_build=''
_program_path="$([ "${_program_fattening_program_path+set}" = 'set' ] && printf '%s\n' "$_program_fattening_program_path" || ([ "${0%/*}" = "${0}" ] && printf '%s\n' '.' || printf '%s\n' "${0%/*}"))"
_program_libPath="${_program_path}/lib"
_program_etcPath="${_program_path}/etc"
_program_varPath="${_program_path}/var"
_program_entrypoint='main'

_program_commandLine_parseInitialise()
{
	luvi_applicationsPath_default="$(pwd)"/applications
	luvi_outputPath_default="$(pwd)"/release
	luvi_main_default=''
}

_program_commandLine_helpMessage()
{
	_program_commandLine_helpMessage_usage="[OPTION]... -- [APPLICATIONs]...
[OPTION] --run APPLICATION -- [APPLICATION ARGUMENTS]
"
	_program_commandLine_helpMessage_description="Parses *.package.json files to create concatenated JavaScript"
	_program_commandLine_helpMessage_options="
  -a, --applications-path PATH  PATH to applications folder.
                                Defaults to '$luvi_applicationsPath_default'.
  -o, --output-path PATH        PATH to folder of output.
                                Defaults to '$luvi_outputPath_default'.
  -l, --copyright-file PATH     PATH to copyright file.
                                Defaults to '--applications-path ../COPYRIGHT', currently:-
                                '$luvi_applicationsPath_default/../COPYRIGHT'.
  -r, --run APPLICATION         Runs APPLICATION. Non-options are interpreted as ARGUMENTS
                                to pass to APPLICATION.
  -m, --main MAIN               MAIN in --applications-path/APPLICATION/MAIN.lua
                                Ignored if --run not specified (main.lua used instead).
If APPLICATIONs are unspecified, all applications are used"
    _program_commandLine_helpMessage_optionsSpacing='   '
	_program_commandLine_helpMessage_configurationKeys="
  luvi_applicationsPath  Equivalent to --applications-path
  luvi_outputPath        Equivalent to --output-path
  luvi_copyrightFile     Equivalent to --copyright-file
"
	_program_commandLine_helpMessage_examples="
  ${_program_name} --run myapp -- -s -o -m -e argument
"
}

_program_commandLine_optionExists()
{
	case "$optionName" in
		
		m|applications-path)
			echo 'yes-argumented'
		;;
		
		o|output-path)
			echo 'yes-argumented'
		;;
		
		l|copyright-file)
			echo 'yes-argumented'
		;;
		
		r|run)
			echo 'yes-argumented'
		;;
		
		m|main)
			echo 'yes-argumented'
		;;
		
		*)
			echo 'no'
		;;
		
	esac
}

_program_commandLine_processOptionWithoutArgument()
{
	:
}

_program_commandLine_processOptionWithArgument()
{
	case "$optionName" in
		
		a|applications-path)
			core_validate_folderPathReadableAndSearchableAndWritable $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			luvi_applicationsPath="$optionValue"
		;;
		
		o|output-path)
			core_validate_folderPathIsReadableAndSearchableAndWritableOrCanBeCreated $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			luvi_outputPath="$optionValue"
		;;
		
		l|copyright-file)
			core_validate_filePathReadable $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			luvi_copyrightFile="$optionValue"
		;;
		
		r|run)
			luvi_run="$optionValue"
		;;
		
		m|main)
			luvi_main="$optionValue"
		;;
		
	esac
}

_program_commandLine_handleNonOptions()
{
	core_variable_array_initialise luvi_nonOptions
	core_variable_array_append luvi_nonOptions "$@"
}

_program_commandLine_validate()
{
	if core_variable_isUnset luvi_applicationsPath; then
		luvi_applicationsPath="$luvi_applicationsPath_default"
	else
		core_validate_folderPathReadableAndSearchableAndWritable $core_commandLine_exitCode_CONFIG 'configuration setting' 'luvi_applicationsPath' "$luvi_applicationsPath"
	fi

	if core_variable_isUnset luvi_outputPath; then
		luvi_outputPath="$luvi_outputPath_default"
	else
		core_validate_folderPathIsReadableAndSearchableAndWritableOrCanBeCreated $core_commandLine_exitCode_CONFIG 'configuration setting' 'luvi_outputPath' "$luvi_outputPath"
	fi

	if core_variable_isUnset luvi_copyrightFile; then
		luvi_copyrightFile="$luvi_applicationsPath"/../COPYRIGHT
		core_validate_filePathReadable $core_commandLine_exitCode_CONFIG 'default' '--copyright-file' "$luvi_copyrightFile"
	else
		core_validate_filePathReadable $core_commandLine_exitCode_CONFIG 'configuration setting' 'luvi_outputPath' "$luvi_outputPath"
	fi
	
	if core_variable_isSet luvi_run; then
		if core_variable_isUnset luvi_main; then
			luvi_main="$luvi_main_default"
		fi
	fi
}

# Assumes pwd, and so requires this code to be running from this folder
. "$_program_libPath"/shellfire/core/init.functions "$@"
